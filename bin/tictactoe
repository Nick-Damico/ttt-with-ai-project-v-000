#!/usr/bin/env ruby

require_relative '../config/environment'

#==============================================
# Functions for Game Mode Options
#==============================================

def self.one_player_options
    # first is used to assign value to computer :player_number,
    # :player_number lets the computer follow a method of play,
    # if :player_number == 1, computer uses "attack" method
    # if :player_number == 2, computer uses "defend" method.
    first = nil
    loop do
        puts "Do you want to go first? (Y)es or (N)o "
        first = gets.chomp.downcase
        break if first == "y" || first == "n"
    end
    if first == "y"
        computer = Players::Computer.new("O")
        computer.player_number = 2
        new_game = Game.new(Players::Human.new("X"), computer)
        
    else 
        computer = Players::Computer.new("X")
        computer.player_number = 1
        new_game = Game.new(computer,Players::Human.new("O"))
    end
    
    new_game.start_game
end

def self.cpu_vs_cpu_options
    computer_1 = Players::Computer.new("X")
    computer_1.player_number = 1
    computer_2 = Players::Computer.new("O")
    computer_2.player_number = 2
    new_game = Game.new(computer_1,computer_2)
    new_game.start_game
end

#==============================================
# Game Setup | Intro
#==============================================

# Greet the user with a message.
puts "=" * 40
puts "Welcome to the Tic Tac Toe!"
puts "=" * 40
response = nil
while response != 'exit'
    # Prompt the user for what kind of game they want to play, 0, 1, or 2 player.
    puts "How many Players will there be? 0, 1, or 2: "
    player_count = gets.chomp
        
    case player_count
    when "0"
        self.cpu_vs_cpu_options
    when "1"
       self.one_player_options
    when "2"
        new_game = Game.new
        new_game.start_game
    end
    puts "Would you like to play again? Type (yes) or (exit): "
    response = gets.chomp
end


    


# Ask the user for who should go first and be "X".

# Use the input to correctly initialize a Game with the appropriate player types and token values.

# When the game is over, the CLI should prompt the user if they would like to play again 
# and allow them to choose a new configuration for the game as described above.
# If the user doesnâ€™t want to play again, exit the program.

